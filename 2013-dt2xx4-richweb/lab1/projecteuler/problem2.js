/*

Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not
exceed four million, find the sum of the even-valued terms.

*/

// "npm install lodash" to get the following utility library for Javascript
_ = require("lodash");

function fibsUpTo(max) {
    var fibs = [1, 2], len = 2, n;
    while (true) {
        n = fibs[len - 2] + fibs[len - 1];
        if (n > max) break;
        fibs.push(n);
        len++;
    }
    return fibs;
}

// Javascript with Lo-dash supports a functional programming paradigm solution as follows
var evens = function(n) { return n % 2 === 0; };
var sum = function(acc, n) { return acc + n; }
console.log(_.reduce(_.filter(fibsUpTo(4000000), evens), sum));








